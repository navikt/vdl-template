name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  docker_image: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: pip
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          PYTHONPATH=src pytest ./tests/unit

  build:
    needs: test
    name: Build and push docker container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=ma
          tags: ${{ env.docker_image }}

  deploy-dev:
    name: Deploy to dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: infrastructure/nais.yaml
          VAR: image=${{ env.docker_image }}
          VARS: infrastructure/dev-fss.yaml

  deploy-prod:
    name: Deploy to prod
    needs: build
    runs-on: ubuntu-latest
    if: "${{ github.event_name != 'pull_request' }}"
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: infrastructure/nais.yaml
          VAR: image=${{ env.docker_image }}
          VARS: infrastructure/prod-fss.yaml
